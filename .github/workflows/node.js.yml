# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, run tests, and perform a lint check.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build & Test on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Run Lint
      run: npm run lint

    - name: Run Build
      run: npm run build --if-present

    - name: Run Tests and Generate Coverage Report
      run: npm test -- --coverage

  # An example of a separate deployment job that runs only after the 'build' job succeeds.
  # This job will not run if any of the build matrix jobs fail.
  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Deploying...
      run: echo "This is a placeholder for your deployment script."
      # Replace the line above with your actual deployment commands, e.g.:
      # - run: 'your-deployment-script.sh'
      # - uses: 'your-deployment-action'

